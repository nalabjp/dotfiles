#!/usr/bin/env ruby

require 'optparse'
require "open3"
require 'set'

class DiffMerge
  DEBUG = !!ENV['DEBUG']

  def self.call
    opts = ArgvParser.call
    new(opts).execute
  end

  def initialize(opts = {})
    @opts = opts
  end

  def execute
    set = opts[:commits].each_with_object(Set.new) do |merge_commit, s|
      changes(merge_commit).each {|f| s.add(f) }
    end
    debug(set)
    $stdout.puts diff(set.to_a)
  end

  private

  attr_reader :opts

  def debug(*args)
    args.each { |a| puts "[DEBUG] #{a}" } if DEBUG
  end

  def run(*cmds)
    debug(cmds)
    Open3.capture3(*cmds).yield_self do |o, e, s|
      raise e unless s.success?
      o.chomp
    end
  end

  def stdout_to_array(stdout)
    stdout.split("\n")
  end

  def changes(merge_commit)
    cmds = ['git', 'show', '--pretty=', '--name-only', '-m', merge_commit]
    stdout_to_array(run *cmds).uniq.sort
  end

  def diff(paths)
    filtered = if opts[:filter].empty?
                 paths
               else
                 regexp = Regexp.union(opts[:filter])
                 paths.select { |path| regexp.match?(path) }
               end

    cmds = ['git', 'diff', opts[:diff_options], opts[:range], '--', filtered].flatten.compact
    run *cmds
  end
end

class ArgvParser
  def self.call
    opts = { diff_options: nil, filter: [] }

    op = OptionParser.new
    op.banner = 'Usage:  git diffmerge [options] <commit>[..<commit>] <merge_commit>[...]'
    op.separator ''
    op.separator 'Options:'
    op.on('--diff-options="..."', 'pass options to `git-diff`') { |v| opts[:diff_options] = v }
    op.on('--filter=WORD1,WORD2,...', Array, 'filter for file paths') { |v| opts[:filter] = v }
    op.parse!(ARGV)

    raise if ARGV.size < 2

    opts[:range] = ARGV.shift
    opts[:commits] = ARGV

    opts
  rescue
    $stderr.puts op.help
    exit 1
  end
end

DiffMerge.call
